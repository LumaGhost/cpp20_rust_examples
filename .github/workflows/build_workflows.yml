name: Build Workflows
on:
  workflow_call:
    inputs: 
      image_name:
        required: true
        type: string
      platform_name:
        required: true
        type: string
  
jobs:
  workflow_test:
    runs-on: ${{ inputs.image_name }}
    timeout-minutes: 10
    env:
      CONAN_HOME: ${{ github.workspace }}/conan_home
    steps:
      - uses: actions/checkout@v3
        timeout-minutes: 1
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
      - name: Rust Cache
        timeout-minutes: 1
        uses: Swatinem/rust-cache@v2.2.1
        with: 
          workspaces: |
            ${{ github.workspace }}/rust_in_cpp/meson_calls_cargo/rust_lib_cpp_bindings/build -> rust_lib_c_abi
          cache-on-failure: true
      - name: Conan Cache
        id: github-cache-conan
        timeout-minutes: 1
        uses: actions/cache@v1
        env:
          cache-name: cache-conan-modules
        with:
          path: ${{ env.CONAN_HOME }}
          key: conan-host-${{ runner.os }}-target-${{ runner.os }}-${{ hashFiles('**/conanfile.py', '**/conanfile.txt', '**/conan-ci') }}
      - name: windows install pkg-config
        if: ${{ inputs.platform_name == 'windows' }}
        timeout-minutes: 2
        run: choco install pkgconfiglite
      - name: Set up Visual Studio shell
        if: ${{ inputs.platform_name == 'windows' }}
        uses: egor-tensin/vs-shell@v2
      - name: pip install
        timeout-minutes: 2
        run: pip3 install -r ${{ github.workspace }}/system_stuff/ci/requirements.txt
      - name: rust in cpp - meson calls cargo workflow
        working-directory: ${{ github.workspace }}/rust_in_cpp/meson_calls_cargo/rust_lib_cpp_bindings
        run: |
          meson setup --native-file ${{ github.workspace }}/system_stuff/ci/${{ inputs.platform_name }}/ci-native.ini rust_in_cpp_build
          meson compile -C rust_in_cpp_build
          meson test -C rust_in_cpp_build --print-errorlogs
          meson install -C rust_in_cpp_build  --destdir ./meson_install
      - name: cpp in rust - cargo calls conan workflow (creating conan package)
        working-directory: ${{ github.workspace }}/cpp_in_rust/cargo_calls_conan/cpp_library-sys/cpp_library
        run: |
          conan create . -vtrace --build=missing --profile:build=${{ github.workspace }}/system_stuff/ci/${{ inputs.platform_name }}/conan-ci --profile:host=${{ github.workspace }}/system_stuff/ci/${{ inputs.platform_name }}/conan-ci
      - name: cpp in rust - cargo calls conan workflow (running cargo)
        working-directory: ${{ github.workspace }}/cpp_in_rust/cargo_calls_conan/cpp_library-sys
        env:
          CARGO_CONAN_PROFILE: ${{ github.workspace }}/system_stuff/ci/${{ inputs.platform_name }}/conan-ci
        run: |
          cargo build -vv --release
          cargo test --release -- --nocapture
      - name: cpp in rust - cargo calls meson workflow
        working-directory: ${{ github.workspace }}/cpp_in_rust/cargo_calls_meson/cpp_library_c_api-sys
        env:
          CARGO_USER_MESON_NATIVE_FILE: ${{ github.workspace }}/system_stuff/ci/${{ inputs.platform_name }}/ci-native.ini
        run: |
          cargo build -vv
          cargo test -- --nocapture
      - name: cpp in rust - meson builds rust and cpp workflow
        working-directory: ${{ github.workspace }}/cpp_in_rust/meson_builds_cpp_and_rust
        run: |
          meson setup --native-file ${{ github.workspace }}/system_stuff/ci/${{ inputs.platform_name }}/ci-native.ini build
          meson compile -C build